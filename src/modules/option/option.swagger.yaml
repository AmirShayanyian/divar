tags:
  - name: "Option"
    description: "Option Module and Routes"
paths:
  /option:
    post:
      summary: "Create Option Route"
      description: ''
      tags:
        - "Option"
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CreateOption"
          application/json:
            schema:
              $ref: "#/components/schemas/CreateOption"
      responses:
        201:
          description: "Option created Successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateOption"
    get:
      summary: "Find Options Route"
      tags:
        - "Option"
      responses:
        200:
          description: "Successful !"
  /option/{id}:
    get:
      summary: "Find Option by id Route"
      tags:
        - "Option"
      parameters:
        - in: "path"
          name: "id"
          type: "string"
      responses:
        200:
          description: "Successful !"
    delete:
      summary: "Find and delete a Option by id"
      tags:
        - "Option"
      parameters:
        - in: "path"
          name: "id"
          type: "string"
      responses:
        200:
          description: "Option Deleted!"
  /option/by-category/{categoryId}:
    get:
      summary: "Find option by category-id"
      description: "Find an option by sending a category-id"
      tags:
        - "Option"
      parameters:
        - in: "path"
          required: "true"
          type: "string"
      responses:
        200:
          description: "Successful !"
  /option/by-category-slug/{slug}:
    get:
      summary: "Find option by category-slug"
      description: "Find an option by sending a category-slug"
      tags:
        - "Option"
      parameters:
        - in: "path"
          name: "slug"
          type: "string"
      responses:
        200:
          description: "Successful !"

components:
  schemas:
    CreateOption:
      type: "object"
      required:
        - "title"
        - "type"
        - "key"
        - "category"
      properties:
        title:
          type: "string"
        key:
          type: "string"
        category:
          type: "string"
        guide:
          type: "string"
        type:
          type: "string"
          enum:
            - "string"
            - "boolean"
            - "number"
            - "array"
        enum:
          type: "array"
          items:
            type: "string"
